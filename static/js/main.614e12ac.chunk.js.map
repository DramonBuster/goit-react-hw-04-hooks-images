{"version":3,"sources":["Components/Toastify/Toastify.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Components/Button/Button.js","data/services.js","Components/ImageNotFound/ImageNotFound.js","Components/ImageFinder/ImageFinder.js","App.js","reportWebVitals.js","index.js"],"names":["Toastify","type","nameToastify","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","transition","Slide","propTypes","PropTypes","string","isRequired","Header","styled","header","SearchForm","form","SearchButton","button","SearchLabel","span","SearchInput","input","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","style","width","height","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","GalleryListItem","li","GalleryImage","img","ImageGalleryItem","webformatURL","user","largeImageURL","src","alt","Gallery","ul","ImageGallery","images","onClick","map","image","id","LoaderWrapper","div","LoadingLoader","color","modalRoot","document","querySelector","OverlayWrapper","ButtonClose","ModalWrapper","Modal","fullSize","name","onClose","handleKeyDown","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","LoadMore","Button","fetchImages","page","a","axios","get","response","status","data","hits","Error","NotFoundMessage","h4","ImageNotFound","ImageFinderWrapper","Status","scrollToTheBottom","offsetHeight","documentElement","scrollTo","top","behavior","scrollToTheTop","ToTheTopButton","ImageFinder","setImages","setStatus","showModal","setShowModal","setAlt","setFullSize","setPage","RESOLVED","NOTFOUND","API","then","responseImages","length","catch","error","fetchData","handleClick","nodeName","dataset","fullsize","query","Loader","prevState","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.614e12ac.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Slide, toast } from 'react-toastify';\r\n\r\nconst Toastify = (type, nameToastify) =>\r\n  toast(nameToastify, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    transition: Slide,\r\n    type: type,\r\n  });\r\n\r\nToastify.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  nameToastify: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Toastify;","import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport Toastify from '../Toastify/Toastify';\r\n\r\nconst Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding: 12px 24px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  padding: 8px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  margin-right: 10px;\r\n  padding: 0;\r\n  border: 0;\r\n  opacity: 0.6;\r\n  background-color: transparent;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst SearchLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-size: 22px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nexport default function SearchBar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleChange = event => {\r\n    setSearchQuery(event.target.value.toLowerCase());\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (searchQuery.trim() === '') {\r\n      Toastify('warning', 'Enter the name of the picture or photo!');\r\n    } else {\r\n      onSubmit(searchQuery.trim());\r\n      setSearchQuery('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <SearchForm onSubmit={handleSubmit}>\r\n        <SearchButton type=\"submit\">\r\n          <ImSearch style={{ width: 22, height: 22 }} />\r\n          <SearchLabel>Search</SearchLabel>\r\n        </SearchButton>\r\n        <SearchInput\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={searchQuery}\r\n          onChange={handleChange}\r\n        />\r\n      </SearchForm>\r\n    </Header>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst GalleryListItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst GalleryImage = styled.img`\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  :hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n\r\nconst ImageGalleryItem = ({ webformatURL, user, largeImageURL }) => (\r\n    <GalleryListItem>\r\n        <GalleryImage\r\n            src={webformatURL}\r\n            alt={user}\r\n            data-fullsize={largeImageURL}\r\n        />\r\n    </GalleryListItem>\r\n)\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  user: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst Gallery = styled.ul`\r\n  display: grid;\r\n  width: 1200px;\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n  grid-auto-rows: 260px;\r\n  grid-gap: 12px;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <Gallery onClick={onClick}>\r\n      {images.map(image => \r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          webformatURL={image.webformatURL}\r\n          largeImageURL={image.largeImageURL}\r\n          user={image.user}\r\n        />\r\n      )}\r\n    </Gallery>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\n\r\nconst LoaderWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nconst LoadingLoader = () => {\r\n  return (\r\n    <LoaderWrapper>\r\n      <Loader type=\"Circles\" color=\"#00BFFF\" height={300} width={300} />;\r\n    </LoaderWrapper>\r\n  );\r\n};\r\n\r\nexport default LoadingLoader;","import PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { createPortal } from 'react-dom';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst OverlayWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nconst ButtonClose = styled.button`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 28px;\r\n  padding: 0;\r\n  border: none;\r\n  color: #fff;\r\n  background-color: transparent;\r\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  \r\n  :hover {\r\n    color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n\r\nconst Modal = ({ fullSize, name, onClose}) => {\r\n  // static propTypes = {\r\n  //   onClose: PropTypes.func.isRequired,\r\n  //   fullSize: PropTypes.string.isRequired,\r\n  //   name: PropTypes.string.isRequired,\r\n  // };\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener('keydown', handleKeyDown);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   window.removeEventListener('keydown', handleKeyDown);\r\n  // };\r\n\r\n  const handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    onClose();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  return createPortal(\r\n    <OverlayWrapper onClick={handleBackdropClick}>\r\n      <ModalWrapper>\r\n        <img src={fullSize} alt={name} />\r\n      </ModalWrapper>\r\n      <ButtonClose\r\n        type=\"button\"\r\n        onClick={handleClick}\r\n      >\r\n        <AiOutlineCloseCircle style={{ width: 36, height: 36 }} />\r\n      </ButtonClose>\r\n    </OverlayWrapper>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  fullSize: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst LoadMore = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n  max-width: 140px;\r\n  padding: 8px 16px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  color: #fff;\r\n  line-height: 1;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  :hover {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <LoadMore type=\"button\" onClick={onClick} >Load More</LoadMore>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import axios from 'axios';\r\n\r\nconst KEY = '22657812-5b6312e522363c98c02137a18';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\n\r\nconst fetchImages = async (searchQuery, page) => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  if (response.status === 200) return response.data.hits;\r\n  throw new Error(response.status);\r\n};\r\n\r\nexport default fetchImages;","import styled from 'styled-components';\r\n\r\nconst NotFoundMessage = styled.h4`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-top: 50px;\r\n  text-align: center;\r\n  font-size: 70px;\r\n  font-weight: bold;\r\n  color: red;\r\n`;\r\n\r\nconst ImageNotFound = () => {\r\n    return (\r\n        <NotFoundMessage>No images found. <br /> Please, try again.</NotFoundMessage>\r\n    );\r\n};\r\n\r\nexport default ImageNotFound;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchBar from '../Searchbar/Searchbar';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Loader from '../Loader/Loader';\r\nimport Toastify from '../Toastify/Toastify';\r\nimport Modal from '../Modal/Modal';\r\nimport Button from '../Button/Button';\r\nimport API from '../../data/services';\r\nimport ImageNotFound from '../ImageNotFound/ImageNotFound';\r\n\r\nconst ImageFinderWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;\r\n\r\nconst Status = {\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  NOTFOUND: 'notFound',\r\n};\r\n\r\nconst scrollToTheBottom = () => {\r\n  let offsetHeight = document.documentElement.offsetHeight - 965;\r\n  window.scrollTo({\r\n    top: offsetHeight,\r\n    behavior: 'smooth',\r\n  });\r\n};\r\n\r\nconst scrollToTheTop = () => {\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth',\r\n  });\r\n};\r\n\r\nconst ToTheTopButton = styled.button`\r\n  position: fixed;\r\n  right: 24px;\r\n  bottom: 24px;\r\n  display: block;\r\n  min-width: 80px;\r\n  max-width: 140px;\r\n  padding: 8px 16px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  color: #fff;\r\n  line-height: 1;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  :hover {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\n\r\nconst ImageFinder = () => {\r\n  // state = {\r\n  //   searchQuery: '',\r\n  //   images: [],\r\n  //   status: null,\r\n  //   showModal: false,\r\n  //   alt: null,\r\n  //   fullSize: null,\r\n  //   page: 1,\r\n  // };\r\n\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [status, setStatus] = useState(null);\r\n  const [showModal, setShowModal] = useState();\r\n  const [alt, setAlt] = useState(null);\r\n  const [fullSize, setFullSize] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!searchQuery) return;\r\n      const { PENDING, RESOLVED, NOTFOUND } = Status;\r\n      setStatus(PENDING);\r\n      await API(searchQuery, page)\r\n        .then(responseImages => {\r\n          if (responseImages.length === 0) {\r\n            setStatus(NOTFOUND);\r\n            Toastify(\r\n              'warning',\r\n              'Sorry, there are no images matching your search query. Please try again.',\r\n            );\r\n          } else {\r\n            setImages(images => [...images, ...responseImages]);\r\n            setStatus(RESOLVED);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setStatus(NOTFOUND);\r\n          Toastify('error', `${error}`);\r\n        });\r\n      if (page > 1) scrollToTheBottom();\r\n    }\r\n    fetchData();\r\n  }, [searchQuery, page]);\r\n    \r\n    \r\n    \r\n  const handleFormSubmit = query => {\r\n    if (query !== searchQuery) {\r\n      setImages([]);\r\n      setSearchQuery(query);\r\n      setPage(1);\r\n    }\r\n  };\r\n\r\n  const handleClick = event => {\r\n    if (showModal) {\r\n      setShowModal(!showModal);\r\n      setAlt(null);\r\n      setFullSize(null);\r\n    } else {\r\n      if (event.target.nodeName !== 'IMG') return;\r\n      setShowModal(!showModal);\r\n      setAlt(event.target.alt);\r\n      setFullSize(event.target.dataset.fullsize);\r\n    }\r\n  };\r\n\r\n  const getLoadMore = () => {\r\n    setPage(prevState => prevState + 1);\r\n  };\r\n\r\n  return (\r\n    <ImageFinderWrapper>\r\n      <SearchBar onSubmit={handleFormSubmit} />\r\n      {status === 'pending' && <Loader />}\r\n      {status === 'resolved' && (\r\n        <ImageGallery images={images} onClick={handleClick} />\r\n      )}\r\n      {images.length > 11 && status === 'resolved' && (\r\n        <Button onClick={getLoadMore} />\r\n      )}\r\n      {images.length > 11 && (\r\n        <ToTheTopButton onClick={scrollToTheTop}>Up</ToTheTopButton>\r\n      )}\r\n      {status === 'notFound' && <ImageNotFound />}\r\n      {showModal && (\r\n        <Modal onClose={handleClick} fullSize={fullSize} name={alt} />\r\n      )}\r\n    </ImageFinderWrapper>\r\n  );\r\n};\r\n\r\nexport default ImageFinder;","import './App.css';\nimport styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageFinder from './Components/ImageFinder/ImageFinder';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 0 40px;\n  min-width: 1340px;\n`;\n\nfunction App() {\n  return (\n      <>\n        <Container>\n          <ImageFinder />\n        </Container>\n        <ToastContainer />\n      </>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n  ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}